/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.sql.*;
import conexion_bd_cu.Conexion;
import javax.swing.JOptionPane;

/**
 *
 * @author Victor Alejandro Rojas Yovaniniz
 */
public class Login extends javax.swing.JFrame {
    
    //Metodo que permite enviar datos entre interfaces(user)
    public static String user = "";
    //varible para alojar de manera temporal la contraseña
    String pass = "";
    
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setSize(400,550);//Tamaño de la interfaz
        setResizable(false);//Negar que sea modificable la interfaz
        setTitle("Acceso");//Titulo de la interfaz
        setLocationRelativeTo(null);//Centrado de la interfaz
        
        //Agregar imagen dentro de Jframe
        ImageIcon fondo = new ImageIcon("src/imagenes/Login.png");
        //Crear objeto de la clase icon, para adapatar imagen de forma destribuida (ancho, alto, ancho)
        Icon icono = new ImageIcon(fondo.getImage().getScaledInstance(lbl_imagenLogin.getWidth(),
                lbl_imagenLogin.getHeight(), Image.SCALE_DEFAULT));
        
        //Colocar la imageen dentro de lbl
        lbl_imagenLogin.setIcon(icono);
        //Necesario para reflejar los cambios
        this.repaint();
           
    }
    
    
    //Personalizar icono de Jframe
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/Icono.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_contrasena = new javax.swing.JPasswordField();
        txt_usuario = new javax.swing.JTextField();
        chk_MostrarContrasena = new javax.swing.JCheckBox();
        btn_acceder = new javax.swing.JButton();
        lbl_acl = new javax.swing.JLabel();
        lbl_imagenLogin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_contrasena.setBackground(new java.awt.Color(204, 204, 204));
        txt_contrasena.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_contrasena.setForeground(new java.awt.Color(51, 51, 51));
        txt_contrasena.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_contrasena.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_contrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contrasenaActionPerformed(evt);
            }
        });
        getContentPane().add(txt_contrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 210, -1));

        txt_usuario.setBackground(new java.awt.Color(204, 204, 204));
        txt_usuario.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_usuario.setForeground(new java.awt.Color(51, 51, 51));
        txt_usuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_usuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 210, -1));

        chk_MostrarContrasena.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chk_MostrarContrasena.setForeground(new java.awt.Color(204, 204, 204));
        chk_MostrarContrasena.setText("Mostrar contraseña");
        chk_MostrarContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_MostrarContrasenaActionPerformed(evt);
            }
        });
        getContentPane().add(chk_MostrarContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, -1, -1));

        btn_acceder.setBackground(new java.awt.Color(204, 204, 204));
        btn_acceder.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        btn_acceder.setText("Ingresar");
        btn_acceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_accederActionPerformed(evt);
            }
        });
        getContentPane().add(btn_acceder, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 210, 35));

        lbl_acl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/aclLogo.png"))); // NOI18N
        getContentPane().add(lbl_acl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 50, 40));
        getContentPane().add(lbl_imagenLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_contrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contrasenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_contrasenaActionPerformed

    private void chk_MostrarContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_MostrarContrasenaActionPerformed
        // Para mostrar contraseña
        if(chk_MostrarContrasena.isSelected()) {
            txt_contrasena.setEchoChar((char)0);
        }else {
            txt_contrasena.setEchoChar('*');
        }
    }//GEN-LAST:event_chk_MostrarContrasenaActionPerformed

    private void btn_accederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_accederActionPerformed
        //Obtener credenciales y guardarlas en las variables
        user = txt_usuario.getText().trim();
        pass = txt_contrasena.getText().trim();
        
        //Controlador de que los campos no esten vacios
        if(!user.equals("") || !pass.equals("")){
            
            try {
                //instanciando con clase conexion con metodo conectar
                Connection cn =  Conexion.conectar();
                
                //seleccionar tipo de nivel y estatus desde la base de datos y ccomprar lo que se
                //escribio en el login contrastando con lo de BD
                PreparedStatement pst = cn.prepareStatement(
                        "select tipo_nivel , estatus from usuarios where username = '" + user
                        + "' and password = '" + pass + "'");
                
                //Mandar a ejecutar la instrucción
                ResultSet rs = pst.executeQuery();
                
                //Estructura condicional , si hay coencidencias con user y pass si no mencionar datos de acceso incorrectos
                if(rs.next()){
                    //Estas variables son para ver si tiene acceso o ver que tipo de usuario es 
                    String tipo_nivel = rs.getString("tipo_nivel");
                    String estatus = rs.getString("estatus");
                    
                    //Estructura de condicional por tipo de usuario
                    if(tipo_nivel.equalsIgnoreCase("Administrador") && estatus.equalsIgnoreCase("Activo")){
                        //Cerrar la interfaz para ingresar previamente a la interfaz de administrador
                        dispose();
                        //Abrir ventana administrador
                        new Administrador().setVisible(true);
                    }else if(tipo_nivel.equalsIgnoreCase("Usuario") && estatus.equalsIgnoreCase("Activo")){
                        //Cerrar la interfaz para ingresar previamente a la interfaz de administrador
                        dispose();
                        //Abrir ventana usuario
                        new Usuario().setVisible(true);
                    }else{
                        JOptionPane.showMessageDialog(null, "Tu cuenta ha sido bloqueada");
                        txt_usuario.setText("");
                        txt_contrasena.setText("");
                    }
                    
                    
                }else{
                    //Mensaje alerta de credenciales
                    JOptionPane.showMessageDialog(null, "Datos de acceso incorrectos");
                    //Limpiado de credenciales
                    txt_usuario.setText("");
                    txt_contrasena.setText("");
                }
            } catch (SQLException e) {
                System.err.println("Error en el botón de accceso" + e);
                JOptionPane.showMessageDialog(null, "Error en iniciar sesión, contactar con administrador!!");
            }   
        }else{
            JOptionPane.showMessageDialog(null, "Debes ingresar todos los campos");
        }
    }//GEN-LAST:event_btn_accederActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_acceder;
    private javax.swing.JCheckBox chk_MostrarContrasena;
    private javax.swing.JLabel lbl_acl;
    private javax.swing.JLabel lbl_imagenLogin;
    private javax.swing.JPasswordField txt_contrasena;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
